<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
	<!-- 启用shrio授权注解拦截方式 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 装配 securityManager -->
		<property name="securityManager" ref="securityManager" />
		<!-- 配置登陆页面 -->
		<property name="loginUrl" value="/index.jsp" />
		<!-- 登陆成功后的一面 -->
		<property name="successUrl" value="/jsp/success.jsp" />

		<property name="unauthorizedUrl" value="/jsp/unauthorized.jsp" />
		<!-- 具体配置需要拦截哪些 URL, 以及访问对应的 URL 时使用 Shiro 的什么 Filter 进行拦截. -->
		<!-- anon：它对应的过滤器里面是空的,什么都没做 --><!-- 任何人都可以访问，匿名 -->
		<!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器 -->
		<property name="filterChainDefinitions">
			<value>
				/index.jsp=anon
				/jsp/success.jsp=anon
				/jsp/fail.jsp=anon
				/jsp/user.jsp
				= roles[user]
				/jsp/admin.jsp = roles[admin]
				/logout =logout
				/admin/user** =
				authc,perms[admin:manage]	<!-- 已经登录并且还要有admin:manage权限才可以访问 -->
			</value>
		</property>
	</bean>

	<!-- 配置缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!-- 指定 ehcache 的配置文件 -->
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
	</bean>
	<!-- 配置进行授权和认证的 Realm -->
	<bean id="myRealm" class="com.hust.manage.shiro.realm.ShiroDbRealm">
		<property name="userService" ref="userService" />
	</bean>
	<bean id="userService" class="com.hust.manage.service.impl.UserServiceImpl" />
	<!-- 配置 Shiro 的 SecurityManager Bean. -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="cacheManager" ref="cacheManager" />
		<property name="realm" ref="myRealm" />
		<property name="sessionMode" value="native">
		</property>
	</bean>
	<!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- 开启shiro注解，需要使用下面这两个bean -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"></bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"></property>
	</bean>
</beans>  