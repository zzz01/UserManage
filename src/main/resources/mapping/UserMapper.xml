<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hust.manage.dao.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.hust.manage.model.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_password" property="userPassword"
			jdbcType="VARCHAR" />
		<result column="user_tel" property="userTel" jdbcType="VARCHAR" />
		<result column="user_truename" property="userTruename"
			jdbcType="VARCHAR" />
		<result column="user_address" property="userAddress" jdbcType="VARCHAR" />
		<result column="createdate" property="createdate" jdbcType="DATE" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, user_name, user_password, user_tel, user_truename,
		user_address,
		createdate
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.hust.manage.model.UserExample">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="pageStart !=0 or pageLimit!=0">
			limit #{pageStart},#{pageLimit}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.hust.manage.model.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.hust.manage.model.User">
		insert into user (id,
		user_name, user_password,
		user_tel, user_truename, user_address,
		createdate)
		values (#{id,jdbcType=INTEGER},
		#{userName,jdbcType=VARCHAR},
		#{userPassword,jdbcType=VARCHAR},
		#{userTel,jdbcType=VARCHAR}, #{userTruename,jdbcType=VARCHAR},
		#{userAddress,jdbcType=VARCHAR},
		#{createdate,jdbcType=DATE})
	</insert>
	<insert id="insertSelective" parameterType="com.hust.manage.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="userPassword != null">
				user_password,
			</if>
			<if test="userTel != null">
				user_tel,
			</if>
			<if test="userTruename != null">
				user_truename,
			</if>
			<if test="userAddress != null">
				user_address,
			</if>
			<if test="createdate != null">
				createdate,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				#{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="userTel != null">
				#{userTel,jdbcType=VARCHAR},
			</if>
			<if test="userTruename != null">
				#{userTruename,jdbcType=VARCHAR},
			</if>
			<if test="userAddress != null">
				#{userAddress,jdbcType=VARCHAR},
			</if>
			<if test="createdate != null">
				#{createdate,jdbcType=DATE},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.hust.manage.model.UserExample"
		resultType="java.lang.Integer">
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.userName != null">
				user_name = #{record.userName,jdbcType=VARCHAR},
			</if>
			<if test="record.userPassword != null">
				user_password = #{record.userPassword,jdbcType=VARCHAR},
			</if>
			<if test="record.userTel != null">
				user_tel = #{record.userTel,jdbcType=VARCHAR},
			</if>
			<if test="record.userTruename != null">
				user_truename = #{record.userTruename,jdbcType=VARCHAR},
			</if>
			<if test="record.userAddress != null">
				user_address = #{record.userAddress,jdbcType=VARCHAR},
			</if>
			<if test="record.createdate != null">
				createdate = #{record.createdate,jdbcType=DATE},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set id = #{record.id,jdbcType=INTEGER},
		user_name =
		#{record.userName,jdbcType=VARCHAR},
		user_password =
		#{record.userPassword,jdbcType=VARCHAR},
		user_tel =
		#{record.userTel,jdbcType=VARCHAR},
		user_truename =
		#{record.userTruename,jdbcType=VARCHAR},
		user_address =
		#{record.userAddress,jdbcType=VARCHAR},
		createdate =
		#{record.createdate,jdbcType=DATE}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.hust.manage.model.User">
		update user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				user_password = #{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="userTel != null">
				user_tel = #{userTel,jdbcType=VARCHAR},
			</if>
			<if test="userTruename != null">
				user_truename = #{userTruename,jdbcType=VARCHAR},
			</if>
			<if test="userAddress != null">
				user_address = #{userAddress,jdbcType=VARCHAR},
			</if>
			<if test="createdate != null">
				createdate = #{createdate,jdbcType=DATE},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hust.manage.model.User">
		update user
		set
		user_name = #{userName,jdbcType=VARCHAR},
		user_password =
		#{userPassword,jdbcType=VARCHAR},
		user_tel =
		#{userTel,jdbcType=VARCHAR},
		user_truename =
		#{userTruename,jdbcType=VARCHAR},
		user_address =
		#{userAddress,jdbcType=VARCHAR},
		createdate =
		#{createdate,jdbcType=DATE}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>